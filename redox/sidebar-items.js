initSidebarItems({"fn":[["rand","Generate pseudo random number"]],"macro":[["assert!","Ensure that a boolean expression is `true` at runtime."],["assert_eq!","Asserts that two expressions are equal to each other."],["debug_assert!","Ensure that a boolean expression is `true` at runtime."],["debug_assert_eq!","Asserts that two expressions are equal to each other, testing equality in both directions."],["format!","Use the syntax described in `std::fmt` to create a value of type `String`. See `std::fmt` for more information."],["print!","Print to console"],["print_color!","Print to console with color"],["println!","Print new line to console"],["println_color!","Print new line to console with color"],["readln!","Read a line from the console"],["unimplemented!","A standardized placeholder for marking unfinished code. It panics with the message `\"not yet implemented\"` when executed."],["unreachable!","A utility macro for indicating unreachable code."],["vec!","Creates a `Vec` containing the arguments."],["write!","Use the `format!` syntax to write data into a buffer."],["writeln!","Use the `format!` syntax to write data into a buffer, appending a newline."]],"mod":[["any","This module implements the `Any` trait, which enables dynamic typing of any `'static` type through runtime reflection."],["ascii","Operations on ASCII strings and characters"],["borrow","A module for working with borrowed data."],["boxed","A pointer type for heap allocation."],["cell","Shareable mutable containers."],["char","A Unicode scalar value"],["clone","The `Clone` trait for types that cannot be 'implicitly copied'"],["cmp","Functionality for ordering and comparison."],["console","A module for console functionality"],["convert","Traits for conversions between types."],["default","The `Default` trait for types which may have meaningful default values."],["env","Enviroment data"],["error","Traits for working with Errors."],["externs","A module for necessary C and assembly constructs"],["floating_num","Numeric traits and functions for generic mathematics"],["fmt","Utilities for formatting and printing strings"],["fs","File system module"],["hash","Generic hashing support."],["i16","The 16-bit signed integer type."],["i32","The 32-bit signed integer type."],["i64","The 64-bit signed integer type."],["i8","The 8-bit signed integer type."],["intrinsics","rustc compiler intrinsics."],["io","IO"],["isize","The pointer-sized signed integer type."],["iter","Composable external iteration"],["marker","Primitive traits and marker types representing basic 'kinds' of types."],["mem","Basic functions for dealing with memory"],["net","A module dealing with network connections"],["num","Numeric traits and functions for the built-in numeric types."],["ops","Overloadable operators"],["option","Optional values"],["orbital","A module for window support"],["panicking","Panic support for libcore"],["prelude","The Rust Prelude"],["ptr","Raw, unsafe pointers, `*const T`, and `*mut T`"],["raw","Contains struct definitions for the layout of compiler built-in types."],["rc","Thread-local reference-counted boxes (the `Rc<T>` type)."],["result","Error handling with the `Result` type"],["simd","SIMD vectors."],["slice","A dynamically-sized view into a contiguous sequence, `[T]`."],["str","Unicode string slices"],["string","An owned, growable string that enforces that its contents are valid UTF-8."],["syscall","A module for system calls"],["time","A module for time"],["to_num","Types convertable to integers"],["u16","The 16-bit unsigned integer type."],["u32","The 32-bit unsigned integer type."],["u64","The 64-bit unsigned integer type."],["u8","The 8-bit unsigned integer type."],["usize","The pointer-sized unsigned integer type."],["vec","A growable list type with heap-allocated contents, written `Vec<T>` but pronounced 'vector.'"]],"struct":[["BMPFile","A bitmap"],["Box","A pointer type for heap allocation."],["Vec","A growable list type, written `Vec<T>` but pronounced 'vector.'"],["WAV","A WAV file"]]});